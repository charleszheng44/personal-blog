<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Charles Dev Log</title>
    <link>http://localhost:1313/</link>
    <description>Recent content on Charles Dev Log</description>
    <generator>Hugo -- 0.144.1</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 18 Feb 2025 20:23:12 -0800</lastBuildDate>
    <atom:link href="http://localhost:1313/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>From Training to Serving: AI with PyTorch &amp; Kubeflow on K8s (I)</title>
      <link>http://localhost:1313/posts/e2e-ai-workflow-on-k8s/</link>
      <pubDate>Tue, 18 Feb 2025 20:23:12 -0800</pubDate>
      <guid>http://localhost:1313/posts/e2e-ai-workflow-on-k8s/</guid>
      <description>&lt;p&gt;I’m interested in covering the entire pipeline—from model training to model serving
using PyTorch, Kubeflow, and Kubernetes. In this blog series, I’ll walk through the
a basic example of that process, aimed at clarifying some of the moving parts involved.&lt;/p&gt;
&lt;p&gt;For demonstration, I built a Kubernetes cluster on a GCP instance featuring a T4 GPU,
2 vCPUs, and 8 GB of RAM. GCP is simply my choice here because I’ve got free credit,
but AWS or Azure would do the job just as well.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
